/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E                 &kp R                       &kp T                         &kp Y                 &kp U              &kp I                 &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D                 &kp F                       &lt 4 G                       &kp H                 &kp J              &kp K                 &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C                 &kp V                       &kp B                         &kp N                 &kp M              &kp COMMA             &kp DOT  &kp FSLH  &kp ESC
                         &lt 3 LC(LEFT_ARROW)  &mt LEFT_COMMAND LC(RIGHT)  &mt LC(LS(LEFT_ALT)) ENTER    &mt LEFT_SHIFT SPACE  &lt 2 LC(LS(TAB))  &mt LEFT_ALT LC(TAB)
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1        &kp N2      &kp N3         &kp N4        &kp N5           &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &kp BSPC
&kp GRAVE  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp SEMI
&kp LSHFT  &trans        &trans      &trans         &trans        &trans           &kp LS(LPAR)   &kp LS(RPAR)  &kp LBKT      &kp RBKT      &kp LS(LBRC)  &kp LS(RBRC)
                                     &kp LGUI       &trans        &kp SPACE        &kp RET        &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp RA(RS(Q))  &kp LBKT      &kp RBKT      &kp LS(PIPE)  &trans  &trans    &kp N7  &kp N8   &kp N9    &kp LS(LPAR)  &kp LS(RPAR)       &kp ESC
&kp RA(RS(A))  &kp LS(LPAR)  &kp LS(RPAR)  &kp BSLH      &trans  &trans    &kp N4  &kp N5   &kp N6    &kp MINUS     &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE
&trans         &kp LS(LBRC)  &kp LS(RBRC)  &kp FSLH      &trans  &trans    &kp N1  &kp N2   &kp N3    &kp LS(PLUS)  &kp ASTERISK       &kp FSLH
                                           &trans        &trans  &trans    &kp N0  &kp DOT  &kp BSPC
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &bt BT_SEL 0  &bt BT_NXT  &bt BT_PRV  &trans            &trans       &kp UP    &trans     &trans  &trans  &kp LC(DELETE)
&trans  &trans  &trans        &trans      &trans      &trans            &kp LEFT     &kp DOWN  &kp RIGHT  &trans  &trans  &trans
&trans  &trans  &trans        &trans      &trans      &trans            &trans       &trans    &trans     &trans  &trans  &trans
                              &trans      &trans      &kp LA(DELETE)    &kp LA(DEL)  &trans    &trans
            >;
        };
    };
};
